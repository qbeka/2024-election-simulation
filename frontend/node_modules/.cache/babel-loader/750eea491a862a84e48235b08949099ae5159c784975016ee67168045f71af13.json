{"ast":null,"code":"import React,{useState,useEffect}from'react';import{ComposableMap,Geographies,Geography}from'react-simple-maps';import axios from'axios';import{scaleLinear}from'd3-scale';import{interpolateBlues,interpolateReds}from'd3-scale-chromatic';import'../styles/MapComponent.css';import{jsx as _jsx}from\"react/jsx-runtime\";const geoUrl='/us-states-topojson.json';const MapComponent=()=>{const[statesData,setStatesData]=useState({});useEffect(()=>{const fetchStateResults=()=>{axios.get('http://localhost:5000/api/state-results').then(response=>{setStatesData(response.data);}).catch(error=>{console.error('Error fetching state results:',error);});};fetchStateResults();const interval=setInterval(fetchStateResults,1000);return()=>clearInterval(interval);},[]);const getFillColor=stateCode=>{const stateResult=statesData[stateCode];if(!stateResult){return'#D3D3D3';// Grey\n}else{const{democrat_percentage,republican_percentage}=stateResult;const totalVotes=stateResult.democrat_votes+stateResult.republican_votes;if(totalVotes===0){return'#D3D3D3';// Grey\n}const margin=Math.abs(democrat_percentage-republican_percentage);const colorScale=scaleLinear().domain([0,50]).range([0.5,1]);const t=colorScale(margin);if(democrat_percentage>republican_percentage){return interpolateBlues(t);}else{return interpolateReds(t);}}};return/*#__PURE__*/_jsx(\"div\",{className:\"map-container\",children:/*#__PURE__*/_jsx(ComposableMap,{projection:\"geoAlbersUsa\",children:/*#__PURE__*/_jsx(Geographies,{geography:geoUrl,children:_ref=>{let{geographies}=_ref;return geographies.map(geo=>{const stateCode=geo.properties.postal;const fillColor=getFillColor(stateCode);const stateResult=statesData[stateCode];return/*#__PURE__*/_jsx(Geography,{geography:geo,fill:fillColor,stroke:\"#FFFFFF\",strokeWidth:0.5,onMouseEnter:()=>{// Display tooltip or state info\n},onMouseLeave:()=>{// Hide tooltip or state info\n}},geo.rsmKey);});}})})});};export default MapComponent;","map":{"version":3,"names":["React","useState","useEffect","ComposableMap","Geographies","Geography","axios","scaleLinear","interpolateBlues","interpolateReds","jsx","_jsx","geoUrl","MapComponent","statesData","setStatesData","fetchStateResults","get","then","response","data","catch","error","console","interval","setInterval","clearInterval","getFillColor","stateCode","stateResult","democrat_percentage","republican_percentage","totalVotes","democrat_votes","republican_votes","margin","Math","abs","colorScale","domain","range","t","className","children","projection","geography","_ref","geographies","map","geo","properties","postal","fillColor","fill","stroke","strokeWidth","onMouseEnter","onMouseLeave","rsmKey"],"sources":["/Users/qendrimbeka/Decentralized voting simulation/frontend/src/components/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n} from 'react-simple-maps';\nimport axios from 'axios';\nimport { scaleLinear } from 'd3-scale';\nimport { interpolateBlues, interpolateReds } from 'd3-scale-chromatic';\nimport '../styles/MapComponent.css';\n\nconst geoUrl = '/us-states-topojson.json';\n\nconst MapComponent = () => {\n  const [statesData, setStatesData] = useState({});\n\n  useEffect(() => {\n    const fetchStateResults = () => {\n      axios\n        .get('http://localhost:5000/api/state-results')\n        .then((response) => {\n          setStatesData(response.data);\n        })\n        .catch((error) => {\n          console.error('Error fetching state results:', error);\n        });\n    };\n\n    fetchStateResults();\n    const interval = setInterval(fetchStateResults, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const getFillColor = (stateCode) => {\n    const stateResult = statesData[stateCode];\n    if (!stateResult) {\n      return '#D3D3D3'; // Grey\n    } else {\n      const { democrat_percentage, republican_percentage } = stateResult;\n      const totalVotes = stateResult.democrat_votes + stateResult.republican_votes;\n      if (totalVotes === 0) {\n        return '#D3D3D3'; // Grey\n      }\n      const margin = Math.abs(democrat_percentage - republican_percentage);\n      const colorScale = scaleLinear()\n        .domain([0, 50])\n        .range([0.5, 1]);\n\n      const t = colorScale(margin);\n\n      if (democrat_percentage > republican_percentage) {\n        return interpolateBlues(t);\n      } else {\n        return interpolateReds(t);\n      }\n    }\n  };\n\n  return (\n    <div className=\"map-container\">\n      <ComposableMap projection=\"geoAlbersUsa\">\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map((geo) => {\n              const stateCode = geo.properties.postal;\n              const fillColor = getFillColor(stateCode);\n              const stateResult = statesData[stateCode];\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={fillColor}\n                  stroke=\"#FFFFFF\"\n                  strokeWidth={0.5}\n                  onMouseEnter={() => {\n                    // Display tooltip or state info\n                  }}\n                  onMouseLeave={() => {\n                    // Hide tooltip or state info\n                  }}\n                />\n              );\n            })\n          }\n        </Geographies>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}